// <auto-generated>
//     Generated by the union source generator.
// </auto-generated>

#pragma warning disable CS1591// Missing XML comment for publicly visible type or member

namespace {{ Namespace }}
{
    [global::System.CodeDom.Compiler.GeneratedCode("Mediator.SourceGenerator", "1.0.0.0")]
    [global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
    {{~ if AllowUnsafeIsOn ~}}
#if NET5_0_OR_GREATER
    [global::System.Runtime.CompilerServices.SkipLocalsInit]
#endif
    {{~ end ~}}
    partial struct {{ Name }}
    {
        [global::System.Runtime.InteropServices.FieldOffset(0)]
        private readonly int _tag;

        {{~ for type in UnionTypes ~}}
        [global::System.Runtime.InteropServices.FieldOffset(4)]
        private readonly {{ type.TypeName }} {{ type.FieldName }};
        {{~ end ~}}

        {{~ for type in UnionTypes ~}}
        public bool IsT{{ type.TypeArgumentIndex }} => _tag == {{ type.Tag }};
        {{~ end ~}}

        {{~ for type in UnionTypes ~}}
        /// <summary>
        /// Construct the union from the value of a T{{ type.TypeArgumentIndex }}
        /// </summary>
        /// <param name="{{ type.FieldName }}">Error value</param>
        public {{ Name }}({{ type.TypeName }} {{ type.FieldName }})
        {
            global::System.Runtime.CompilerServices.Unsafe.SkipInit(out this);
            // global::UnionTypeGenerator.Abstractions.Internal.GeneratedCodeHelper.SkipInit(out this);
            this._tag = {{ type.Tag }};
            this.{{ type.FieldName }} = {{ type.FieldName }};
        }
        {{~ end ~}}

        /// <summary>
        /// Handle the contents of the union, map it into a TResult value.
        /// </summary>
        /// <typeparam name="TResult">Return value type.</typeparam>
        {{~ for type in UnionTypes ~}}
        /// <param name="handleValue{{ type.TypeArgumentIndex }}">Function for handling value of type T{{ type.TypeArgumentIndex }}</param>
        {{~ end ~}}
        /// <returns>The TResult value</returns>
        public TResult Match<TResult>(
            {{~ for type in UnionTypes ~}}
            global::System.Func<{{ type.TypeName }}, TResult> handleValue{{ type.TypeArgumentIndex }}{{ type.Comma }}
            {{~ end ~}}
        )
        {
            return this._tag switch
            {
                {{~ for type in UnionTypes ~}}
                {{ type.Tag }} => handleValue{{ type.TypeArgumentIndex }}({{ type.FieldName }}),
                {{~ end ~}}
                _ => default!,
            };
        }

        {{~ for type in UnionTypes ~}}
        public static implicit operator {{ Name }}({{ type.TypeName }} value) => new {{ Name }}(value);
        {{~ end ~}}
    }
}
